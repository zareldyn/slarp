#!/bin/bash
SELF_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
APP_NAME=$(basename "$SELF_DIR")
APP_TMPFILE="/var/tmp/slarp"

[ $(. "$SELF_DIR"/is-running) == "no" ] || {
	echo "$APP_NAME is already running!"
	exit
}

[ -z "$CERTS_DIR" ] && CERTS_DIR="$SELF_DIR"/certs
[ -z "$VHOSTS_DIR" ] && VHOSTS_DIR="$SELF_DIR"/vhosts
[ -z "$APACHE_LOGS_DIR" ] && APACHE_LOGS_DIR="$SELF_DIR"/apache-logs
[ -z "$CERTBOT_LOGS_DIR" ] && CERTBOT_LOGS_DIR="$SELF_DIR"/certbot-logs

for dir in "$CERTS_DIR" "$VHOSTS_DIR" "$APACHE_LOGS_DIR" "$CERTBOT_LOGS_DIR"; do
	mkdir -p "$dir" || {
		echo "Could not create $dir. Aborting." >&2
		exit 74
	}
done

echo CERTS_DIR="$CERTS_DIR"               >  "$APP_TMPFILE" || {
	echo "Could not write $APP_TMPFILE. Aborting." >&2
	exit 74
}
echo VHOSTS_DIR="$VHOSTS_DIR"             >> "$APP_TMPFILE"
echo APACHE_LOGS_DIR="$APACHE_LOGS_DIR"   >> "$APP_TMPFILE"
echo CERTBOT_LOGS_DIR="$CERTBOT_LOGS_DIR" >> "$APP_TMPFILE"

docker run -d --restart on-failure \
           --name $APP_NAME \
           -e CONTAINER_NAME=$APP_NAME \
           -v "$CERTS_DIR":/etc/letsencrypt \
           -v "$VHOSTS_DIR":/etc/apache2/sites-enabled \
           -v "$APACHE_LOGS_DIR":/var/log/apache2 \
           -v "$CERTBOT_LOGS_DIR":/var/log/letsencrypt \
           -p 80:80 -p 443:443 \
           $APP_NAME:latest bash -c \
              "cron &&
               apache2ctl -DFOREGROUND"

. "$SELF_DIR"/resolve-containers
echo "$APP_NAME started"
